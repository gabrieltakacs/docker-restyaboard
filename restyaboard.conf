server {
       	listen 443 ssl;
       	server_name _;

       	ssl_certificate         /etc/ssl-certs/fullchain.pem;
        ssl_certificate_key     /etc/ssl-certs/privkey.pem;
        ssl_trusted_certificate /etc/ssl-certs/fullchain.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;

        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        # Generate with:
        #   openssl dhparam -out /etc/nginx/dhparam.pem 2048
        ssl_dhparam /etc/nginx/dhparam.pem;

        # What Mozilla calls "Intermediate configuration"
        # Copied from https://mozilla.github.io/server-side-tls/ssl-config-generator/
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;

        # OCSP Stapling
        # fetch OCSP records from URL in ssl_certificate and cache them
        ssl_stapling on;
        ssl_stapling_verify on;

        # If you want to specify a DNS resolver for stapling, you can uncomment the below
        # line. If you leave it commented, nginx will use your system resolver, which will probably
        # work just fine!
        # resolver <IP DNS resolver>;

       	root /usr/share/nginx/html;
       	index  index.html index.php;

       	gzip on;
       	gzip_disable "msie6";

       	gzip_comp_level 6;
       	# gzip_comp_level 9;
       	gzip_min_length  1100;
       	gzip_buffers 16 8k;
       	gzip_proxied any;
       	# gzip_http_version 1.1;
       	gzip_types       text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss;

       	client_max_body_size 300M;

       	rewrite ^/oauth/authorize$ /server/php/authorize.php last;
       	rewrite ^/oauth_callback/([a-zA-Z0-9_\.]*)/([a-zA-Z0-9_\.]*)$ /server/php/oauth_callback.php?plugin=$1&code=$2 last;
       	rewrite ^/download/([0-9]*)/([a-zA-Z0-9_\.]*)$ /server/php/download.php?id=$1&hash=$2 last;
       	rewrite ^/ical/([0-9]*)/([a-z0-9]*).ics$ /server/php/ical.php?id=$1&hash=$2 last;
       	rewrite ^/api/(.*)$ /server/php/R/r.php?_url=$1&$args last;
       	rewrite ^/api_explorer/api-docs/$ /client/api_explorer/api-docs/index.php last;

       	location / {
       		root /usr/share/nginx/html/client;
       	}

       	location ~ \.php$ {
       		try_files $uri =404;
       		include fastcgi_params;
       		fastcgi_pass   	unix:/var/run/php5-fpm.sock;
       		fastcgi_index   index.php;
       		fastcgi_param  	SCRIPT_FILENAME $document_root$fastcgi_script_name;
       		fastcgi_param PHP_VALUE "upload_max_filesize=9G \n post_max_size=9G \n max_execution_time=200 \n max_input_time=200 \n memory_limit=256M";
       	}

       	location ~* \.(css|js|less|html|ttf|woff|jpg|jpeg|gif|png|bmp|ico) {
       		root /usr/share/nginx/html/client;
       		if (-f $request_filename) {
       			break;
       		}
       		rewrite ^/img/([a-zA-Z_]*)/([a-zA-Z_]*)/([a-zA-Z0-9_\.]*)$ /server/php/image.php?size=$1&model=$2&filename=$3 last;
       		add_header        Cache-Control public;
       		add_header        Cache-Control must-revalidate;
       		expires           7d;
       	}
}
